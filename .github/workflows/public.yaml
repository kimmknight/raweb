name: Deploy to GitHub Pages

on:
  push:
    paths:
      - "frontend/**"
  pull_request:
    paths:
      - "frontend/**"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

concurrency: ci-${{ github.ref }}

jobs:
  build-deploy-and-preview:
    name: Build and deploy
    runs-on: ubuntu-latest

    steps:
      - name: Initial comment (starting deployment)
        if: github.event_name == 'pull_request'
        id: pr_comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            üöÄ Deployment started...
            _The workflow is now building and deploying the preview._
          edit-mode: replace

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.11
          run_install: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.15.0"
          cache: "pnpm"
          cache-dependency-path: frontend/pnpm-lock.yaml

      - name: Install dependencies
        run: cd frontend && pnpm install

      - name: Determine deployment target
        id: context
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "target_name=pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          else
            echo "target_name=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Build the frontend
        id: build
        env:
          TARGET_NAME: ${{ steps.context.outputs.target_name }}
        run: |
          set -e
          if [ "${{ github.ref_name }}" = "master" ]; then
            RAWEB_PUBLIC_BASE="/${{ github.event.repository.name }}/"
          else
            RAWEB_PUBLIC_BASE="/${{ github.event.repository.name }}/deploy-previews/${TARGET_NAME}/"
          fi

          cd frontend
          echo "RAWEB_PUBLIC_BASE=${RAWEB_PUBLIC_BASE}" > .env
          echo "Using PUBLIC_BASE: ${RAWEB_PUBLIC_BASE}"
          if ! pnpm run build --config vite.config.public.ts; then
            echo "success=false" >> $GITHUB_OUTPUT
            exit 1
          fi
          echo "success=true" >> $GITHUB_OUTPUT

      - name: Create 404.html
        if: steps.build.outputs.success == 'true'
        run: |
          cat > frontend/dist/404.html <<'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="utf-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <title>Redirecting...</title>
            <script>
              (function () {
                const path = window.location.pathname;
                const previewMatch = path.match(/^(?:\/${{ github.event.repository.name }})?\/deploy-previews\/([^/]+)/);
                const isPreview = Boolean(previewMatch);
                const hasRawebPrefix = path.startsWith("/${{ github.event.repository.name }}");
                const base = isPreview
                  ? hasRawebPrefix
                    ? `/${{ github.event.repository.name }}/deploy-previews/${previewMatch[1]}`
                    : `/deploy-previews/${previewMatch[1]}`
                  : hasRawebPrefix
                  ? `/${{ github.event.repository.name }}`
                  : ``;
                const href = encodeURIComponent(window.location.href);
                const goto = (page) =>
                  location.replace(`${base}/${page}.html?originalUrl=${href}`);
                if (path.endsWith("/login") || path.endsWith("/login/")) goto("login");
                else if (path.endsWith("/logoff") || path.endsWith("/logoff/")) goto("logoff");
                else if (path.endsWith("/password") || path.endsWith("/password/")) goto("password");
                else if (path.endsWith("/docs") || path.includes("/docs/")) goto("docs");
                else goto("index");
              })();
            </script>
          </head>
          <body></body>
          <style>html { background-color: light-dark(#fff, #121212); }</style>
          </html>
          EOF

      - name: Upload pages artifact (main)
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-pages-artifact@v3
        with:
          path: frontend/dist

      - name: Deploy to GitHub Pages (main)
        if: github.ref == 'refs/heads/master'
        uses: actions/deploy-pages@v4

      - name: Deploy preview
        id: deploy
        if: github.ref != 'refs/heads/master' && steps.build.outputs.success == 'true'
        env:
          TARGET_NAME: ${{ steps.context.outputs.target_name }}
        run: |
          preview_dir="frontend/dist_deploy_previews/${TARGET_NAME}"
          mkdir -p "$preview_dir"
          cp -r frontend/dist/* "$preview_dir/"

          git config user.name github-actions
          git config user.email github-actions@github.com

          set +e
          git fetch origin gh-pages
          fetch_status=$?
          set -e

          if [ $fetch_status -ne 0 ]; then
            git checkout --orphan gh-pages
          else
            git checkout gh-pages
          fi

          cp "$preview_dir/404.html" ./404.html
          mkdir -p "deploy-previews/${TARGET_NAME}"
          cp -r "$preview_dir"/* "deploy-previews/${TARGET_NAME}/"

          git add deploy-previews/${TARGET_NAME} 404.html
          git commit -m "chore: add deploy preview for ${TARGET_NAME}" || echo "No changes to commit"

          echo "Attempting to push to gh-pages..."
          if ! git push origin gh-pages; then
            echo "::warning::Skipping deploy preview ‚Äî no permission to push to gh-pages."
            echo "success=false" >> $GITHUB_OUTPUT
            echo "reason=No permission to push to gh-pages" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "success=true" >> $GITHUB_OUTPUT
          echo "deploy_url=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/deploy-previews/${TARGET_NAME}/" >> $GITHUB_OUTPUT

      - name: Update PR comment (result)
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            ${{ github.workflow }} ‚Äî **Deployment Status**

            ${{ 
              steps.deploy.outputs.success == 'true' && 
              format('‚úÖ Deployed successfully\n\nPreview URL:\nüëâ [{0}]({0})',
                steps.deploy.outputs.deploy_url
              ) ||
              steps.deploy.outputs.reason && format('‚ö†Ô∏è Deployment skipped ‚Äî {0}', steps.deploy.outputs.reason) ||
              '‚ùå Deployment failed during build or upload.'
            }}
