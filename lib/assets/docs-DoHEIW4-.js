const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["lib/assets/shared-C1qu_bLV.js","lib/assets/shared-SRH7esm4.css"])))=>i.map(i=>d[i]);
import{h as b,B as m,a1 as p,x as y,j as a,k as t,C as o,q as g,l as w,I as A,d as G,r as W,o as N,b as X,i as Q,c as J,e as Z,A as ee,f as te,a2 as U,a3 as oe,a4 as ne,a5 as se,T as ie,a6 as re,m as ae,v as le,D as ce,H as de,F as pe,a7 as ue,a8 as ge,a9 as he,aa as me,ab as fe,ac as be,ad as we,_ as ye,J as ve,K as Ae,V as Re,u as Se,W as ke,X as _e,ae as We}from"./shared-C1qu_bLV.js";import{N as E}from"./404-B3TLvQ1H.js";const Ie="/lib/assets/70185ca9-b89e-4137-b381-262960d102c0-DTgiFvTd.png",Ce="/lib/assets/664409eb-6939-4101-a025-e07ea9ed141b-a1NswxUH.png",xe="/lib/assets/edbfce9f-c9df-4c52-b353-9efaf027c639-DoypYOPV.png",Te="/lib/assets/21a8dc0c-b148-4512-9901-93408de26f5e-BKXRSbPs.png",De="/lib/assets/7528f048-07d8-420a-bc1d-7a16d93a39d3-B7VTEgC6.png",Pe="/lib/assets/3afa8501-6057-433c-94a8-6b7cb6e26397-DcoSlUs8.png",$e="/lib/assets/3bd6746a-98db-47f8-9a23-9d9544a7dccf-5TEUsPqX.png",Oe="/lib/assets/8b210a24-3672-438e-a9a6-d76385a2bf23-DLHYjVCl.png",Le={class:"markdown-body"},Fe="Configure hosting server and terminal server aliases",Ne="Configure aliases",Ue={__name:"index",setup(s,{expose:n}){return n({frontmatter:{title:"Configure hosting server and terminal server aliases",nav_title:"Configure aliases"}}),(i,e)=>(m(),b("div",Le,e[0]||(e[0]=[p('<p>If you want to customize the name of the hosting server that appears in RAWeb or any of the remote desktop clients, or you want to customize the names of the terminal servers for your remote apps and desktops, follow the instructions after the example section.</p><h1>Example (before and after)</h1><p><em>Using <code>&lt;add key=&quot;TerminalServerAliases&quot; value=&quot;WIN-SGPBICA0161=Win-RemoteApp;&quot; /&gt;</code></em></p><table><thead><tr><th>Before</th><th>After</th></tr></thead><tbody><tr><td><img src="'+Ie+'" alt="image"></td><td><img src="'+Ce+'" alt="image"></td></tr><tr><td><img src="'+xe+'" alt="image"></td><td><img src="'+Te+'" alt="image"></td></tr><tr><td><img src="'+De+'" alt="image"></td><td><img src="'+Pe+'" alt="image"></td></tr></tbody></table><h1>Method 1: RAWeb web interface</h1><ol><li>Sign in to the web interface with an account that is a memeber of the Local Administrators group.</li><li>On the left navigation rail, click the <strong>Policies</strong> button.</li><li>Click <strong>Configure aliases for terminal servers</strong>.</li><li>In the dialog, set the <strong>State</strong> to <strong>Enabled</strong>. Under <strong>Options</strong>, click <strong>Add</strong> to add a new alias. For <strong>Key</strong>, specify the name of the server. For <strong>value</strong>, specify the alias you want to use. Click <strong>OK</strong> to save the alias(es).</li></ol><h1>Method 2: IIS Manager</h1><ol><li>Once RAWeb is installed, open <strong>IIS Manager</strong> and expand the tree in the <strong>Connections pane</strong> on the left side until you can see the <strong>RAWeb</strong> application. The default name is <strong>RAWeb</strong>, but it may have a different name if you performed a manual installation to a different folder. Click on the <strong>RAWeb</strong> application.</li><li>In the <strong>Features View</strong>, double click <strong>Application Settings</strong><br><img width="860" src="'+$e+'"></li><li>In the <strong>Actions pane</strong>, click <strong>Add</strong> to open the <strong>Add Application Setting</strong> dialog.<br><img width="860" src="'+Oe+'"></li><li>Specify the properties. For <strong>Name</strong>, use <em>TerminalServerAliases</em>. For <strong>Value</strong>, specify the aliases with the format <em>ServerName1=Alias 1;</em>. You can specify multiple aliases separated by semicolons. When you are finished, click <strong>OK</strong>.</li></ol><h1>Method 3. Directly edit <code>appSettings.config</code>.</h1><ol><li>Open <strong>File Explorer</strong> and navigate to the RAWeb directory. The default installation directory is <code>C:\\inetpub\\RAWeb</code>.</li><li>Navigate to <code>App_Data</code>.</li><li>Open <code>appSettings.config</code> in a text editor.</li><li>Inside the <code>appSettings</code> element, add: <code>&lt;add key=&quot;TerminalServerAliases&quot; value=&quot;&quot; /&gt;</code></li><li>Edit the value attribute to specify the aliases. You can specify aliases with the format <em>ServerName1=Alias 1;ServerName2=Alias 2;</em>.</li><li>Save the file.</li></ol>',10)])))}},Ee=Object.freeze(Object.defineProperty({__proto__:null,default:Ue,nav_title:Ne,title:Fe},Symbol.toStringTag,{value:"Module"})),Me="/lib/assets/add-file-types-to-rdp-files-Cb1-AYUE.png",Be="/lib/assets/configure-webfeed-url-via-local-group-policy-on-the-client-BzmZh0rB.png",qe={class:"markdown-body"},je="File type associations for RAWeb webfeed clients",He="File type associations",Ye={__name:"index",setup(s,{expose:n}){return n({frontmatter:{title:"File type associations for RAWeb webfeed clients",nav_title:"File type associations"}}),(i,e)=>{const r=y("CodeBlock");return m(),b("div",qe,[e[0]||(e[0]=p('<p>RAWeb can associate file types on clients to RemoteApps. For example, you can configure RAWeb so that when a client opens a DOC file, it opens with a Microsoft Word RemoteApp.</p><p><strong>Requirements</strong></p><ul><li>Client must be connected to RAWeb’s webfeed.</li><li>The client webfeed URL must be configured via Group Policy (or Local Policy).</li><li>RDP files need to have file types listed within.</li><li>RemoteApps on host must be configured to allow command line parameters.</li></ul><p>File type associations <strong>will not work</strong> if you configure the webfeed URL via the RemoteApp and Desktop Connections control panel! You <strong>must</strong> configure it via policy. If you cannot configure the policy, you may be able to use <a href="https://www.cyberdrain.com/adding-remote-app-file-associations-via-powershell/" target="_blank" rel="noopener noreferrer">Kelbin Tegelaar’s workaround</a>.</p><h2>Add file types to RDP files</h2><p>With a text editor, open the RDP file for the application that you would like to add file type associations for.</p><p>Add a new line:</p>',7)),a(r,{code:` remoteapplicationfileextensions:s:[file extensions separated by commas]
`}),e[1]||(e[1]=p('<p><img src="'+Me+'" alt=""></p><h2>Configure the RemoteApp to allow command-line parameters</h2><p>Using RemoteApp Tool, edit your RemoteApp and</p><p>set <strong>Command line option</strong> to <strong>Optional</strong>.</p><h2>Configure webfeed URL via local group policy on the client</h2><p>Navigate to <strong>User Configuration &gt; Administrative Templates &gt; Windows Components &gt; Remote Desktop Services &gt; RemoteApp and Desktop Connections</strong>.</p><p>Edit the policy setting <strong>Specify default connection URL</strong>. Click <strong>Enabled</strong> and enter the URL to the webfeed below. Click OK.</p><p><img src="'+Be+'" alt=""></p><h2>Add document icons</h2><p>If you want a custom icon displayed for a particular file type, put an <strong>ICO</strong> file into the icon folder with the same name as the rdp file followed by a dot (.) and then the file extension.</p><p>Example: To set an icon for all XLS files which will open in Excel 2010 (Excel2010.rdp) your would need an icon file named: Excel2010.xls.ico</p>',11))])}}},Ve=Object.freeze(Object.defineProperty({__proto__:null,default:Ye,nav_title:He,title:je},Symbol.toStringTag,{value:"Module"})),Ke="/lib/assets/28276875-8592-48f5-8db6-975d23136cff-i0taoQcn.png",ze="/lib/assets/97a0db8c-768d-4f8c-89c6-5f597d1276ea-CXPnJxW0.png",Ge="/lib/assets/89e0db48-c585-4b08-8cd1-ab18fe0343f1-1Ao7T4vJ.png",Xe={class:"markdown-body"},Qe="Publishing RemoteApps and Desktops",Je="Publish RemoteApps and Desktops",Ze={__name:"index",setup(s,{expose:n}){return n({frontmatter:{title:"Publishing RemoteApps and Desktops",nav_title:"Publish RemoteApps and Desktops"}}),(i,e)=>{const r=y("RouterLink");return m(),b("div",Xe,[e[5]||(e[5]=p('<p>By default, RAWeb will install to <strong>C:\\inetpub\\RAWeb</strong>. This guide assumes that RAWeb is installed to the default location.</p><p>RAWeb can publish RDP files from any device. RAWeb can also publish RemoteApps soecified in the registry.</p><h2>Standard RDP files</h2><p>RDP files should be placed in <strong>C:\\inetpub\\RAWeb\\App_Data\\resources</strong>. Any RDP file in this folder will be automatically published.</p><p>You can create subfolders to sort your RemoteApps and desktops into groups. RemoteApps and desktops are organized into sections on the RAWeb web interface based on subfolder name.</p><p>To add icons, specify a <strong>.ico</strong> or <strong>.png</strong> file in with the same name as the <strong>.rdp</strong> file.</p><ul><li>.ico and .png icons are the only file types supported.</li><li>For RemoteApps, RAWeb will not serve an icon unless the width and height is the same.</li><li>For desktops, if the icon width and height are not the same, RAWeb will assume that the icon file represents the destkop wallpaper. When an icon is needed for the desktop, RAWeb will place the wallpaper into the blue rectangle section of Windows 11’s This PC icon. RAWeb will directly use the wallpaper on the devices tab of the web interface when the display mode is set to card.</li><li>RAWeb’s interface can use dark mode icons and wallpapers. Add “-dark” to the end of the icon name to specify a dark-mode icon or wallpaper.</li></ul><img width="600" alt="" src="'+Ke+'"><br><br> You can also configure RAWeb to restrict which users see certain RDP files. <h3>Configure security permissions</h3><p>By default, the <strong>App_Data\\resources</strong> folder can be read by any user in the <strong>Users</strong> group.</p>',13)),t("p",null,[e[1]||(e[1]=o("RAWeb uses standard Windows security descriptors when determining user access to files in the ")),e[2]||(e[2]=t("strong",null,"App_Data\\resources",-1)),e[3]||(e[3]=o(" folder. Configure security permissions via the security tab in the folder or files properties. For more information, see ")),a(r,{to:"/docs/publish-resources/resource-folder-permissions"},{default:g(()=>e[0]||(e[0]=[o("Configuring user‐based access to resources in the resources folder")])),_:1}),e[4]||(e[4]=o("."))]),e[6]||(e[6]=p('<h3 id="folder-based-permissions">Use folder-based permissions</h3><p>You can optionally provide different RemoteApps and desktops to different users based on their username or group membership.</p><p>Inside the RAWeb folder, you will find a folder called <strong>App_Data\\multiuser-resources</strong>.</p><p>It contains the folders:</p><p><strong>/user</strong> - Create folders in here for each user you wish to target (folder name = username). Drop rdp/image files into a user folder to publish them to the user.</p><p><strong>/group</strong> - Create folders in here for each group you wish to target (folder name = group name). Drop rdp/image files into a group folder to publish them to all users in the group.</p><p>Note: Subfolders within user and group folders are supported. For clients that show folders, each subfolder will appear as a distinct section in the list of apps.</p><h2>Registry RemoteApps</h2><p>RAWeb can publish RDP files from <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server\\TSAppAllowList\\Applications</code>. Only applications with the <code>ShowInTSWA</code> DWORD set to <code>1</code> will be published.</p><p>Use <a href="https://github.com/kimmknight/remoteapptool" target="_blank" rel="noopener noreferrer">RemoteApp Tool</a> to add, remove, and configure RemoteApps in the registry.</p><ol><li>Open <strong>RemoteApp Tool</strong>.</li><li>Click the green plus icon in the bottom-left corner to <strong>Add a new RemoteApp</strong>. Find the executable for the application you want to add.<br><img width="400" alt="" src="'+ze+'"></li><li>The application you added should now appear in the list of applications. <strong>Double click</strong> it in the list to configure the properties.</li><li>Set <strong>TSWebAccess</strong> to <strong>Yes</strong>. You may configure other options as well. Remember to click <strong>Save</strong> when you are finished.<br><img width="400" alt="image" src="'+Ge+'"></li></ol><p>The application should now appear in RAWeb.</p>',12))])}}},et=Object.freeze(Object.defineProperty({__proto__:null,default:Ze,nav_title:Je,title:Qe},Symbol.toStringTag,{value:"Module"})),tt="/lib/assets/c9c532ff-e8d5-4ad5-af84-2fe041d2a702-r6VI_DMW.png",ot="/lib/assets/fe9547ee-db4a-4b2f-a69d-a8ea2ab61498-CCbOcPfb.png",nt="/lib/assets/ff38c130-fae6-4302-a2bd-4f9420833368-DVr8Y7M-.png",st="/lib/assets/df27a870-9830-42e9-b726-f0f413d5890e-CURbI1Wy.png",it="/lib/assets/6dfffa48-ce9c-4f8d-8aed-ceb6f9753983-Dx6pTKqD.png",rt="/lib/assets/f74bbe8c-b84d-4c86-80bc-98a55283e226-dbBcStEQ.png",at="/lib/assets/c0ba7509-8dc4-41f0-9936-04a66a271a52-Bcd0jgVk.png",lt={class:"markdown-body"},ct="Configuring user‐based access to resources in the resources folder",dt="Resource folder permissions",pt={__name:"index",setup(s,{expose:n}){return n({frontmatter:{title:"Configuring user‐based access to resources in the resources folder",nav_title:"Resource folder permissions"}}),(i,e)=>{const r=y("RouterLink");return m(),b("div",lt,[e[3]||(e[3]=p('<p><strong>Summary:</strong></p><ul><li>RAWeb users (or groups) should <em>only</em> have <strong>List folder contents</strong> permissions on the <strong>App_Data\\resources</strong> directory (disable inheritance).</li><li>Any user or group requiring access to a RemoteApp or desktop must have <strong>Read</strong> permission for the RDP file for the app or desktop. <ul><li>For icons to be visible, the user or group must also have <strong>Read</strong> permission for the icon(s) associated with the RDP file.</li></ul></li></ul><h2>Configure directory security permissions</h2><p>By default, the <strong>App_Data\\resources</strong> folder can be read by any user in the <strong>Users</strong> group. We need to change the permissions.</p><ol><li>Open <strong>File Explorer</strong> and navigate to the RAWeb directory. The default installation directory is <code>C:\\inetpub\\RAWeb</code>.</li><li>Navigate to <code>App_Data</code>.</li><li>Right click the <code>resources</code> folder and choose <strong>Properties</strong> to open the properties window.</li><li>Switch to the <strong>Security</strong> tab and click <strong>Advanced</strong> to open the <strong>Advanced Security Settings</strong> dialog.<br><img width="400" src="'+tt+'"></li><li>In the list of <strong>Permissions entries</strong>, select <strong>Users</strong>. Then, click <strong>Edit</strong>. A <strong>Permission Entry</strong> dialog will open.<br><img width="768" src="'+ot+'"></li><li>In the <strong>Permission Entry</strong> dialog, click <strong>Show advanced permissions</strong>. Then, in the <strong>Advanced permissions</strong> section, uncheck all permissions except <em>Traverse folder</em> and <em>List folder</em>. Click <strong>OK</strong> to close the dialog.<br><img width="918" src="'+nt+'"></li><li>In the <strong>Advanced Security Settings</strong> dialog, click <strong>OK</strong> to apply the changes and close the dialog.</li></ol><h2>Grant access to resources to specific users or groups</h2>',6)),t("p",null,[e[1]||(e[1]=o("Use the following steps to grant access to a single resource for a user or group. These steps need to be repeated for each RDP file or icon/wallpaper file. Changes to security permissions affect access to resources from the web app and all workspace clients (e.g., Windows App). If you only need to grant access to a collection of resources to a single user or group, consider using ")),a(r,{to:"/docs/publish-resources/#folder-based-permissions"},{default:g(()=>e[0]||(e[0]=[o("multiuser-resources for folder-based permissions")])),_:1}),e[2]||(e[2]=o("."))]),e[4]||(e[4]=p('<ol><li>Navigate to the <code>resources</code> folder. In a standard installation, the path is <code>C:\\inetpub\\RAWeb\\App_Data\\resources</code>.</li><li>Right click a resource and choose <strong>Properties</strong> to open the properties window.</li><li>Switch to the <strong>Security</strong> tab and click <strong>Edit</strong> to open the <strong>Permissions</strong> dialog.<br><img width="400" src="'+st+'"></li><li>Click <strong>Add</strong> to open the <strong>Select Users or Groups</strong> dialog.<br><img width="360" src="'+it+'"></li><li>In the <strong>Select Users or Groups</strong> dialog, specify the users or groups you want to add. When you are ready, click <strong>OK</strong>.<br><img width="458" src="'+rt+'"></li><li>In the <strong>Permissions</strong> dialog, confirm that only <em>Read</em> or <em>Read</em> and <em>Read and execute</em> are allowed. Click <strong>OK</strong> to apply changes and close the dialog.<br><img width="360" src="'+at+'"></li><li>In the <strong>Properties</strong> window, click <strong>OK</strong>.</li></ol>',1))])}}},ut=Object.freeze(Object.defineProperty({__proto__:null,default:pt,nav_title:dt,title:ct},Symbol.toStringTag,{value:"Module"})),gt={class:"markdown-body"},ht="Reverse proxy via Nginx",mt={__name:"index",setup(s,{expose:n}){return n({frontmatter:{title:"Reverse proxy via Nginx"}}),(i,e)=>(m(),b("div",gt,e[0]||(e[0]=[t("p",null,"Nginx reverse proxy does not support proxying NTLM authentication by default. If you place RAWeb behind nginx, you will only be able to use the web interface.",-1),t("p",null,[o("Some recommendations on the internet suggest using "),t("code",null,"upstream"),o(" with "),t("code",null,"keepalive"),o(". This is "),t("em",null,[t("strong",null,"extremely dangerous")]),o(" because keepalive connections are shared between all connections, which means that one user’s NTLM authentication will apply to other users as well.")],-1),t("p",null,[o("You may be able to enable NTLM authentication with nginx via nginx plus or by using "),t("a",{href:"https://github.com/gabihodoroaga/nginx-ntlm-module",target:"_blank",rel:"noopener noreferrer"},"nginx-ntl-module"),o(".")],-1)])))}},ft=Object.freeze(Object.defineProperty({__proto__:null,default:mt,title:ht},Symbol.toStringTag,{value:"Module"})),bt={class:"markdown-body"},wt="Trusting the RAWeb server (Fix security error 5003)",yt="Trust (security error 5003)",vt={__name:"index",setup(s,{expose:n}){return n({frontmatter:{title:"Trusting the RAWeb server (Fix security error 5003)",nav_title:"Trust (security error 5003)"}}),(i,e)=>{const r=y("CodeBlock");return m(),b("div",bt,[e[0]||(e[0]=t("p",null,"As part of the RAWeb installation, it checks for whether an SSL certificate is installed to the server and is bound to the HTTPS binding in IIS. If it does not find a certificate, the installer will ask to install and bind a self-signed SSL certificate. If you did not accept that option, re-install RAWeb before continuing with this guide.",-1)),e[1]||(e[1]=t("p",null,"The following features require RAWeb to operate over HTTPS with a valid SSL certificate:",-1)),e[2]||(e[2]=t("ul",null,[t("li",null,"RemoteApp and Desktop Connections (RADC) on Windows"),t("li",null,"Workspaces in Windows App (formerly Microsoft Remote Desktop) on macOS, Android, iOS, and iPadOS")],-1)),e[3]||(e[3]=t("p",null,[o("This guide shows you how to configure the RAWeb server and the client devices to operate over HTTPS with an SSL certificate. A limitation of using a self-signed certificate is that it must be installed on each client computer before it will be able to connect. If you wish to avoid this limitiation, you must choose "),t("a",{href:"docs/security/error-5003/#option-2"},"Option 2. Use a certificate from a trusted certificate authority"),o(".")],-1)),e[4]||(e[4]=t("h2",null,"Option 1: Manually trust the self-signed certificate generated by the RAWeb installer",-1)),e[5]||(e[5]=t("p",null,"Open PowerShell. Then, run the following script. It will prompt you for the full URL to your installation to RAWeb. It will retrieve the SSL certificate from that URL and add it the Trusted Root Certification Authorities certificate store for the current user.",-1)),a(r,{class:"language-powershell",code:`$rawebUrl = Read-Host "Enter the full URL (include the protocol) to your installation of RAWeb:"

# bypass SSL/TLS certificate validation for the current session
[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $true }

try {
    $webRequest = [Net.WebRequest]::Create($rawebUrl)
    $webRequest.GetResponse() | Out-Null # we do not need the response, just the connection
    $cert = $webRequest.ServicePoint.Certificate

    if ($cert) {
        # get the current user's certificate store
        $store = New-Object System.Security.Cryptography.X509Certificates.X509Store("Root", [System.Security.Cryptography.X509Certificates.StoreLocation]::CurrentUser)

        try {
            $store.Open([System.Security.Cryptography.X509Certificates.OpenFlags]::ReadWrite)

            # Check if the certificate is already in the store (optional but good practice)
            $existingCert = $store.Certificates | Where-Object { $_.Thumbprint -eq $cert.Thumbprint }
            if ($existingCert) {
                Write-Host "Certificate is already in the Trusted Root Certification Authorities store for the current user."
            } else {
                $store.Add($cert)
                Write-Host "Certificate successfully installed to the Trusted Root Certification Authorities store for the current user."
            }
        }
        finally {
            $store.Close()
        }

    } else {
        Write-Error "Could not retrieve the certificate from the specified URL."
    }

} catch {
    Write-Error "An error occurred while trying to access the URL or process the certificate: $($_.Exception.Message)"
}
`}),e[6]||(e[6]=t("p",null,"If you need the .cer file for other devices, run the following script. It will prompt you to save the certificate file.",-1)),a(r,{class:"language-powershell",code:`Add-Type -AssemblyName System.Windows.Forms

# get the RAWeb URL first
$rawebUrl = Read-Host "Enter the full URL (include the protocol) to your installation of RAWeb:"

# bypass SSL/TLS certificate validation for the current session
[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $true }

try {
    $webRequest = [Net.WebRequest]::Create($rawebUrl)
    $webRequest.GetResponse() | Out-Null # We only need to establish the connection
    $cert = $webRequest.ServicePoint.Certificate

    if ($cert) {
        # create and configure a SaveFileDialog object
        $SaveFileDialog = New-Object System.Windows.Forms.SaveFileDialog
        $SaveFileDialog.InitialDirectory = [Environment]::GetFolderPath("Desktop") # Set initial directory (e.g., Desktop)
        $SaveFileDialog.Filter = "Certificate files (*.cer)|*.cer|All files (*.*)|*.*" # Set file filter
        $SaveFileDialog.FilterIndex = 1 # Set the default selected filter
        $SaveFileDialog.FileName = "raweb.cer" # Set a default file name
        $SaveFileDialog.Title = "Save RAWeb Certificate" # Set the dialog title
        $DialogResult = $SaveFileDialog.ShowDialog()

        # check if the user clicked OK
        if ($DialogResult -eq [System.Windows.Forms.DialogResult]::OK) {
            # get the selected file path
            $SavePath = $SaveFileDialog.FileName

            # export the certificate to bytes and save it to the path from the dialog
            $bytes = $cert.Export([Security.Cryptography.X509Certificates.X509ContentType]::Cert)
            set-content -value $bytes -encoding byte -path $SavePath

            Write-Host "Certificate successfully downloaded and saved to: $SavePath"

        } else {
            Write-Host "Certificate download canceled by user."
        }

        # clean up
        $SaveFileDialog.Dispose()

    } else {
        Write-Error "Could not retrieve the certificate from the specified URL."
    }

} catch {
    Write-Error "An error occurred while trying to access the URL or process the certificate: $($_.Exception.Message)"
}
`}),e[7]||(e[7]=p('<h2 id="option-2">Option 2: Use a certificate from a trusted certificate authority</h2><p>If you have a domain (e.g., example.com) or subdomain, you can obtain an SSL certificate from a trusted certificate authority. You can configure IIS to use the SSL certificate when accessing RAWeb via your domain or subdomain.</p><ol><li>Obtain a certificate in <code>.pfx</code> format from a trusted certificate authority for a domain you own. If you do not have one, you can obtain one for free from <a href="https://letsencrypt.org/getting-started/" target="_blank" rel="noopener noreferrer">Lets Encrypt</a>.</li><li>Open Internet Information Services (IIS) Manager.</li><li>Click the server’s name in the <strong>Connections</strong> pane.</li><li>In the <strong>Features View</strong>, double click <strong>Server Certificates</strong>.</li><li>In the <strong>Actions</strong> pane, click <strong>Import…</strong>.</li><li>Add the certificate file. If it has a password, specify it. Click <strong>OK</strong>.</li><li>In the <strong>Connections</strong> pane, navigate to <strong>Default Web Site</strong>.</li><li>In the <strong>Actions</strong> pane, click <strong>Bindings…</strong>.</li><li>In the <strong>Site Bindings</strong> dialog, click <strong>Add</strong>.</li><li>In the <strong>Add Site Binding</strong> dialog, set <strong>Type</strong> to <em>https</em> and <strong>SSL certificate</strong> to the certificate you imported. Click <strong>OK</strong>.</li><li>Configure your network to expose port 443 from the server or PC that hosts RAWeb.</li><li>In your domain’s DNS settings, configure an A record to point to the public IP address of the server or PC that hosts your installation of RAWeb.</li></ol>',3))])}}},At=Object.freeze(Object.defineProperty({__proto__:null,default:vt,nav_title:yt,title:wt},Symbol.toStringTag,{value:"Module"})),Rt={class:"markdown-body"},St="Uninstall RAWeb",kt={__name:"index",setup(s,{expose:n}){return n({frontmatter:{title:"Uninstall RAWeb"}}),(i,e)=>{const r=y("CodeBlock");return m(),b("div",Rt,[e[2]||(e[2]=p("<p><strong>Part 1. Remove from RAWeb virtual application</strong></p><ol><li>Open Internet Information Services (IIS) Manager.</li><li>In the <strong>Connections</strong> pane, expand <strong><em>Your device name</em> &gt; Sites &gt; Default Web Site</strong>.</li><li>Right click <strong>RAWeb</strong> and choose <strong>Remove</strong>.</li><li>In the <strong>Confirm Remove</strong> dialog, choose <strong>Yes</strong>.</li></ol><p><strong>Part 2. Remove installed files</strong></p><ol><li>Open <strong>File Explorer</strong>.</li><li>Navigate to <strong>C:\\inetpub</strong>.</li><li>Delete the <strong>RAWeb</strong> folder.</li></ol><p><strong>Part 3. Remove Internet Information Services Manager</strong></p><p><em>Only perform these steps if you do not have other IIS websites.</em></p><ol><li>Open PowerShell as an administrator <ul><li>Press the Windows key + X, then select PowerShell (Administrator) or Terminal (Administrator).</li></ul></li><li>Copy and paste the code below, then press enter.</li></ol>",7)),t("blockquote",null,[e[0]||(e[0]=t("p",null,"For Windows Server:",-1)),a(r,{code:`Uninstall-WindowsFeature -Name Web-Server, Web-Asp-Net45, Web-Windows-Auth, Web-Http-Redirect, Web-Mgmt-Console, Web-Basic-Auth
`})]),t("blockquote",null,[e[1]||(e[1]=t("p",null,"For other versions of Windows:",-1)),a(r,{code:`Disable-WindowsOptionalFeature -Online -FeatureName IIS-WebServerRole,IIS-WebServer,IIS-CommonHttpFeatures,IIS-HttpErrors,IIS-HttpRedirect,IIS-ApplicationDevelopment,IIS-Security,IIS-RequestFiltering,IIS-NetFxExtensibility45,IIS-HealthAndDiagnostics,IIS-HttpLogging,IIS-Performance,IIS-WebServerManagementTools,IIS-StaticContent,IIS-DefaultDocument,IIS-DirectoryBrowsing,IIS-ASPNET45,IIS-ISAPIExtensions,IIS-ISAPIFilter,IIS-HttpCompressionStatic,IIS-ManagementConsole,IIS-WindowsAuthentication,NetFx4-AdvSrvs,NetFx4Extended-ASPNET45,IIS-BasicAuthentication
`})])])}}},_t=Object.freeze(Object.defineProperty({__proto__:null,default:kt,title:St},Symbol.toStringTag,{value:"Module"})),Wt="/lib/assets/c5501233-6ef0-48b4-b10d-026139d90c0f-sfGg2XBD.png",It="/lib/assets/f4551b21-bea4-42bd-9bf0-be728d3d2d39-f-5tD707.png",Ct="/lib/assets/6d3eccd5-eb60-4573-9d09-ec178aa95dbc-CoTG_lda.png",xt="/lib/assets/f3f997d2-3bbe-4965-b3ec-675a5565111c-CkA7oWqf.png",Tt="/lib/assets/bde8567d-dbff-47d7-81f1-695de517d01e-BixqZTW4.png",Dt="/lib/assets/d69d8074-78a2-4774-8ba0-9e1a08d083f0-Bl6qCYae.png",Pt="/lib/assets/e84cb7e8-48ff-4d82-bfee-d49c682a2fd6-DXc5-NN1.png",$t="/lib/assets/12967053-a025-4ec8-ac56-ebd4d5da109c-DiB2bNLw.png",Ot="/lib/assets/3b838293-83f5-4016-b828-761beefb3179-C0GA9lgq.png",Lt="/lib/assets/e3584a4e-ebdf-4707-a299-5604538af954-CQObtZEO.png",Ft="/lib/assets/3594cd9d-d108-46fc-bade-f535449746cc-BCNH5cpm.png",Nt={class:"markdown-body"},Ut="Access RAWeb resources as a workspace",Et="Access via Windows App",Mt={__name:"index",setup(s,{expose:n}){return n({frontmatter:{title:"Access RAWeb resources as a workspace",nav_title:"Access via Windows App"}}),(i,e)=>{const r=y("RouterLink");return m(),b("div",Nt,[e[10]||(e[10]=t("p",null,"In addition to accessing resources from the RAWeb web interface, you can also access resources via:",-1)),e[11]||(e[11]=t("ul",null,[t("li",null,"RemoteApp and Desktop Connections (RADC) on Windows"),t("li",null,"Workspaces in Windows App (formerly Microsoft Remote Desktop) on macOS, Android, iOS, and iPadOS")],-1)),a(w(A),{severity:"caution",title:"Caution"},{default:g(()=>[e[2]||(e[2]=o(" This feature will only work if RAWeb is using an SSL certificate that is trusted on every device that attempts to access the resources in RAWeb. ")),e[3]||(e[3]=t("br",null,null,-1)),e[4]||(e[4]=o(" Refer to ")),a(r,{to:"/docs/security/error-5003"},{default:g(()=>e[0]||(e[0]=[o("Trusting the RAWeb server")])),_:1}),e[5]||(e[5]=o(" for more details and instructions for using a trusted SSL certificate. ")),e[6]||(e[6]=t("br",null,null,-1)),e[7]||(e[7]=o(" We recommend ")),a(r,{to:"/docs/security/error-5003#option-2"},{default:g(()=>e[1]||(e[1]=[o("using a certificate from a globally trusted certificate authority")])),_:1}),e[8]||(e[8]=o(". "))]),_:1}),e[12]||(e[12]=p('<h2 id="workspace-url">Identify your workspace URL or email address</h2><p>Before you can add RAWeb’s resources to RADC or Windows App, you need to know the URL for the workspace. Follow these instructions for finding your workspace URL.</p><ol><li>Navigate to your RAWeb installation’s web interface from the device with RADC or Windows App. <em>This step is important; If you cannot access the web interface from the device with RADC or Windows App, your workspace URL will not work.</em></li><li>Sign in to RAWeb.</li><li>Navigate to RAWeb settings. <ul><li>For most users, access settings by clicking or tapping <strong>Settings</strong> in the bottom-left corner of the screen.</li><li>If you or your administrator have configured RAWeb to use <em>simple mode</em>, click or tap the settings icon next to you username in the top-right area of the titlebar.</li></ul></li><li>In the <strong>Workspace URL</strong> section, click or tap <strong>Copy workspace URL</strong> or <strong>Copy workspace email</strong>. Use this URL or email address when adding a workspace. <br> <em>For information about email-based workspace discovery, refer to <a href="https://learn.microsoft.com/en-us/windows-server/remote/remote-desktop-services/rds-email-discovery" target="_blank" rel="noopener noreferrer">the documentaiton on Microsoft Learn</a> and <a href="https://github.com/kimmknight/raweb/pull/129" target="_blank" rel="noopener noreferrer">PR#129</a>.</em></li></ol><p>Now, jump to one of the follow sections based on which device you are using:</p><ul><li><a href="docs/workspaces/#windows-radc">Windows via RemoteApp and Desktop Connections</a></li><li><a href="docs/workspaces/#macos">macOS via Windows App</a></li><li><a href="docs/workspaces/#android">Android via Windows App</a></li><li><a href="docs/workspaces/#ios-and-ipados">iOS and iPadOS via Windows App</a></li></ul>',5)),a(w(A),{severity:"attention",title:"Note"},{default:g(()=>e[9]||(e[9]=[o(" Windows App on Windows does not support adding workspaces via URL or email address. "),t("br",null,null,-1),o(" Instead, use RemoteApp and Desktop Connections. ")])),_:1}),e[13]||(e[13]=p('<h2 id="windows-radc">Windows via RemoteApp and Desktop Connections</h2><ol><li>Right click the Start menu (or press the Windows key + X) and choose <strong>Run</strong>.</li><li>In the <strong>Run</strong> dialog, type <em>control.exe</em>. Click <strong>OK</strong>. <strong>Control Panel</strong> will open.<br><img width="380" src="'+Wt+'"></li><li>If needed, change the view from <strong>Category</strong> to <strong>Small icons</strong> or <strong>Large icons</strong>.<br><img width="830" src="'+It+'"></li><li>Click <strong>RemoteApp and Desktop Connections</strong> in the list.<br><img width="830" src="'+Ct+'"></li><li>On the left side, click <strong>Access RemoteApp and desktops</strong>.<br><img width="830" src="'+xt+'"></li><li>In the <strong>Access RemoteApp and desktops</strong> window, enter the <a href="docs/workspaces/#workspace-url">workspace URL or email address</a>. Click <strong>Next</strong> to continue to the next step.<br><img width="586" src="'+Tt+'"></li><li>Review the information. Then, click <strong>Next</strong> to connect.</li><li>You will see an <strong>Adding connection resources</strong> message. During this step, resources and icons are downloaded from RAWeb. Depending on the number of resources, this may take a while. <ul><li>If you see a <strong>Windows Security</strong> dialog with the message <em>Your credentials did not work</em>, enter the credentials you use to sign in to the RAWeb web interface.<br><img width="586" src="'+Dt+'"><br><img width="456" src="'+Pt+'"></li></ul></li><li>If the connection succeeded, you will see a message indicating the connection name and URL and the programs and desktops that have been added to the Start menu.<br>Windows will periodically update the connection. You may also manually force the connection to update via the control panel.<br><img width="586" src="'+$t+'"></li></ol><h2 id="macos">macOS via Windows App</h2><ol><li>Install <a href="https://apps.apple.com/us/app/windows-app/id1295203466" target="_blank" rel="noopener noreferrer">Windows App from the App Store</a>.</li><li>Open <strong>Windows App</strong>.</li><li>In the menu bar, choose <strong>Connections &gt; Add Workspace…</strong>.<br><img width="477" src="'+Ot+'"></li><li>In the <strong>Add Workspace</strong> sheet, enter the <a href="docs/workspaces/#workspace-url">workspace URL or email address</a>. Change <strong>Credentials</strong> to the credentials you use when you sign in to the RAWeb web interface. Click <strong>Add</strong> to add the workspace.<br><img width="500" src="'+Lt+'"></li><li>You will see a <strong>Setting up workspace…</strong> message. During this step, resources and icons are downloaded from RAWeb. Depending on the number of resources, this may take a while.<br><img width="500" src="'+Ft+'"></li></ol><p>If the connection succeeeded, you will see your apps and devices included in Windows App.</p><h2 id="android">Android via Windows App</h2><ol><li>Install <a href="https://play.google.com/store/apps/details?id=com.microsoft.rdc.androidx" target="_blank" rel="noopener noreferrer">Windows App from the Play Store</a>.</li><li>Open <strong>Windows App</strong>.</li><li>Tap the <strong>+</strong> button in the top-right corner of the app.</li><li>Choose <strong>Workspace</strong>.</li><li>In the <strong>Add Workspace</strong> dialog, enter the <a href="docs/workspaces/#workspace-url">workspace URL or email address</a>. Change <strong>User account</strong> to the credentials you use when you sign in to the RAWeb web interface. Tap <strong>Next</strong> to add the workspace.</li><li>You will see a <strong>Setting up workspace…</strong> message. During this step, resources and icons are downloaded from RAWeb. Depending on the number of resources, this may take a while.</li></ol><h2 id="ios-and-ipados">iOS and iPadOS via Windows App</h2><ol><li>Install <a href="https://apps.apple.com/my/app/windows-app-mobile/id714464092" target="_blank" rel="noopener noreferrer">Windows App Mobile from the App Store</a>.</li><li>Open <strong>Windows App</strong>.</li><li>Tap the <strong>+</strong> button in the top-right corner of the app.</li><li>Choose <strong>Workspace</strong>.</li><li>In the <strong>Add Workspace</strong> sheet, enter the <a href="docs/workspaces/#workspace-url">workspace URL or email address</a>. Change <strong>Credentials</strong> to the credentials you use when you sign in to the RAWeb web interface. Tap <strong>Next</strong> to add the workspace.</li><li>You will see a <strong>Setting up workspace…</strong> message. During this step, resources and icons are downloaded from RAWeb. Depending on the number of resources, this may take a while.</li></ol>',9))])}}},Bt=Object.freeze(Object.defineProperty({__proto__:null,default:Mt,nav_title:Et,title:Ut},Symbol.toStringTag,{value:"Module"})),qt={class:"markdown-body"},jt="Supported environments",Ht={__name:"index",setup(s,{expose:n}){return n({frontmatter:{title:"Supported environments"}}),(i,e)=>(m(),b("div",qt,[e[1]||(e[1]=p("<h2>Supported host machines</h2><p>RAWeb can be hosted on any modern 64-bit Windows device. The primary requirement is the device must support Internet Information Services (IIS) 10 and .NET Framework 4.6.2 or newer. Windows Server 2016 and Windows 10 Version 1607 are the first versions to meet these requirements.</p><h2>Authenticiation scenarios</h2><p>RAWeb can authenticate with local or domain credentials.</p><h3>Local credentials</h3><p>Local credentials should work in all scenarios.</p><h3>Domain credentials</h3><p>For domain credentials, the machine with the RAWeb installation must have permission to enumerate groups and their members. RAWeb uses group membership to restrict access to resources hosted on RAWeb. If RAWeb cannot search group memberships, resources will not load and authentication may fail. This is most likely an issue with complex domain forests that contain one-way trusts.</p><h4>Application pool configuration</h4><p>If necessary, you may change the credentials used by the RAWeb application in IIS so that it uses an account with permission to list groups and view group memberships. See the instructions below:</p><details><summary>Instructions</summary><ol><li>Open <strong>Internet Information Services (IIS) Manager</strong>.</li><li>In the <strong>Connections</strong> pane, click on <strong>Application Pools</strong>.</li><li>In the list of application pools, right click on <strong>raweb</strong> and choose <strong>Advanced Settings</strong>.</li><li>In the <strong>Process Model</strong> group, click on <strong>Identity</strong>. Then, click the button with the ellipsis (<strong>…</strong>) to open the <strong>Application Pool Identity</strong> dialog.</li><li>Choose <strong>Custom Account</strong>, and then click <strong>Set</strong> to provide the credentials for the account.</li><li>Click <strong>OK</strong> on all three dialogs. The RAWeb application will now use the credentials you proivided for its process.</li></ol></details><h4>User cache</h4>",12)),a(w(A),{severity:"caution",title:"Security consideration"},{default:g(()=>e[0]||(e[0]=[o(" Group membership will not automatically update when the user cache is enabled. ")])),_:1}),e[2]||(e[2]=p("<p>If there are cases where the domain controller may be unavailable to RAWeb, you may also want to enable the user cache. The user cache stores details about a user every time the sign in, and RAWeb will fall back to the details in the user cache if the domain controller cannot be reached. If RAWeb is unable to load group memberships from the domain, the group membership cached in the user cache will be used instead. When the user cache is enabled and the domain controller cannot be accessed, the authentication mechanism can also sign in using the cached domain credentials stored by the Windows machine with RAWeb installed. Instructions for enabling are below:</p><details><summary>Instructions</summary><p>If you are able to sign in to RAWeb as an administrative user:</p><ol><li>Open the RAWeb web app.</li><li>Navigate to the <strong>Policies</strong> page.</li><li>Set the <strong>Enable the user cache</strong> policy state to <strong>Enabled</strong>.</li><li>Click <strong>OK</strong> to apply the policy.</li></ol><p>Otherwise, enable the policy via IIS Manager:</p><ol><li>Open <strong>Internet Information Services (IIS) Manager</strong>.</li><li>In the <strong>Connections</strong> pane, find your installation of RAWeb and click it.</li><li>Open <strong>Application Settings</strong>.</li><li>In the <strong>Actions</strong> pane, click <strong>Add…</strong>.</li><li>For <strong>Name</strong>, specify <em>UserCache.Enabled</em>. For <strong>Value</strong>, specify <em>true</em>.</li><li>Click <strong>OK</strong> to apply the policy.</li></ol></details>",2))]))}},Yt=Object.freeze(Object.defineProperty({__proto__:null,default:Ht,title:jt},Symbol.toStringTag,{value:"Module"})),Vt={class:"markdown-body"},Kt={__name:"index",setup(s,{expose:n}){return n({frontmatter:{}}),(i,e)=>{const r=y("RouterLink"),S=y("CodeBlock");return m(),b("div",Vt,[e[11]||(e[11]=t("h2",null,"Get started",-1)),t("p",null,[e[1]||(e[1]=o("The easiest way to get started with RAWeb is to install it with our installation script. Before you install RAWeb, review our ")),a(r,{to:"/docs/supported-environments"},{default:g(()=>e[0]||(e[0]=[o("supported environments documentation")])),_:1}),e[2]||(e[2]=o(". Follow the steps below:"))]),t("ol",null,[e[7]||(e[7]=t("li",null,[t("p",null,[t("strong",null,"Open PowerShell as an administrator"),t("br"),o(" Press the Windows key + X, then select PowerShell (Administrator) or Terminal (Administrator).")])],-1)),t("li",null,[e[3]||(e[3]=t("p",null,[t("strong",null,[o("Copy and paste the code below"),t("sup",{class:"footnote-ref"},[t("a",{href:"docs/#fn1",id:"fnref1"},"[1]")]),o(", then press enter.")])],-1)),a(S,{code:`irm https://github.com/kimmknight/raweb/releases/latest/download/install.ps1 | iex
`})]),t("li",null,[e[6]||(e[6]=t("p",null,[t("strong",null,"Follow the prompts.")],-1)),a(w(A),{severity:"caution",title:"Caution"},{default:g(()=>e[4]||(e[4]=[o(" The installer will retrieve the pre-built version of RAWeb from the latest release and install it to "),t("code",null,"C:\\inetpub\\RAWeb",-1),o(". "),t("br",null,null,-1),o(" Refer to "),t("a",{href:"https://github.com/kimmknight/raweb/releases/latest",target:"_blank",rel:"noopener noreferrer"},"the release page",-1),o(" for more details. ")])),_:1}),a(w(A),{severity:"attention",title:"Note"},{default:g(()=>e[5]||(e[5]=[o(" If Internet Information Services (IIS) or other required components are not already installed, the RAWeb installer will retreive and install them. ")])),_:1})])]),e[12]||(e[12]=t("p",null,[o("To install other versions, visit the "),t("a",{href:"https://github.com/kimmknight/raweb/releases",target:"_blank",rel:"noopener noreferrer"},"the releases page"),o(" on GitHub.")],-1)),e[13]||(e[13]=t("h2",null,"Using RAWeb",-1)),e[14]||(e[14]=t("p",null,[o("By default, RAWeb is available at "),t("a",{href:"https://127.0.0.1/RAWeb",target:"_blank",rel:"noopener noreferrer"},"https://127.0.0.1/RAWeb"),o(". To access RAWeb from other computers on your local network, replace 127.0.0.1 with your host PC or server’s name. To access RAWeb from outside your local network, expose port 443 and replace 127.0.0.1 with your public IP address.")],-1)),t("p",null,[e[9]||(e[9]=o("To add resources to the RAWeb interface, ")),a(r,{to:"/docs/publish-resources"},{default:g(()=>e[8]||(e[8]=[o("refer to Publishing RemoteApps and Desktops")])),_:1}),e[10]||(e[10]=o("."))]),e[15]||(e[15]=p('<p>Refer to the guides in this wiki’s sidebar for more information about using RAWeb.</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>If you are attempting to install RAWeb on Windows Server 2016, you may need to enable TLS 1.2. In PowerShell, run <code>[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12</code>. <a href="docs/#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>',3))])}}},zt=Object.freeze(Object.defineProperty({__proto__:null,default:Kt},Symbol.toStringTag,{value:"Module"})),Gt={id:"appContent"},Xt={id:"page"},Qt=G({__name:"Documentation",setup(s){const n=W(!1);async function l(d){if(d.data.type==="fetch-queue"){const u=d.data.backgroundFetchQueueLength>0;n.value=u}}const i=W(!1);N(()=>{X(l).then(d=>{d==="SSL_ERROR"&&(i.value=!0)})});const e=W(!1);Q.then(()=>{e.value=!0});const r=J(()=>e.value);Z(()=>{r.value&&setTimeout(()=>{ee()},300)});function S(d){const u=[];function c(h,f,L){const[_,...F]=h;if(!_)return;let v=f.find(z=>z.label===_);v||(v={label:_,children:[]},f.push(v)),F.length===0?Object.assign(v,L,{label:_,children:v.children}):c(F,v.children,L)}for(const h of d){if(!h.name)continue;const f=String(h.name).replace(/\/+$/,"").split("/").filter(Boolean);c(f,u,h)}return u}function x(d){return d.map(u=>({name:k[u.label]?.label||u.label,type:"category",children:u.children.map(c=>{const h=[{name:String(c.meta?.nav_title||c.meta?.title||c.name),href:c.path},...c.children.map(f=>({name:String(f.meta?.nav_title||f.meta?.title||f.name),href:f.path})).filter(U)].filter(f=>f.name!=="undefined");return h.length===1?{name:h[0].name,icon:k[c.label]?.icon,href:h[0].href}:{name:k[c.label]?.label||c.label,icon:k[c.label]?.icon,type:"expander",children:h}})})).sort((u,c)=>u.name.localeCompare(c.name)*-1)}const T=te(),C=T.getRoutes(),D=C.find(d=>d.name==="index"),P=C.filter(d=>d.name?.toString().startsWith("(welcome)/")),q=[D,...P].filter(U),j=C.filter(d=>!q.some(u=>u.name===d.name)),H=S(j)||[],k={"(user-guide)":{label:"User Guide"},"(administration)":{label:"Administration"},workspaces:{label:"Workspaces",icon:we},"publish-resources":{label:"Publishing Resources",icon:be},policies:{label:"Policies",icon:fe},security:{label:"Security",icon:me},"reverse-proxy":{label:"Reverse proxies",icon:he},uninstall:{label:"Uninstall RAWeb",icon:ge},"supported-environments":{label:"Supported Environments",icon:ue}},Y=x(S(P)),V=x(H),K=[{name:"Home",href:D?.path,icon:oe},...Y[0]?.children||[],{name:"hr"},...V,{name:"footer",type:"navigation",children:[{name:"hr"},{name:"View on GitHub",href:"https://github.com/kimmknight/raweb",icon:'<svg width="98" height="96" viewBox="0 0 96 96" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z" fill="currentColor"/></svg>'},{name:"Submit a bug report",href:"https://github.com/kimmknight/raweb/issues",icon:ne}]}],$=W(window.innerWidth);function O(){$.value=window.innerWidth}return N(()=>{window.addEventListener("resize",O)}),se(()=>{window.removeEventListener("resize",O)}),(d,u)=>{const c=y("router-view");return m(),b(pe,null,[a(w(ie),{forceVisible:"",loading:n.value,hideProfileMenu:""},null,8,["loading"]),t("div",Gt,[a(w(re),{"show-back-arrow":!1,variant:$.value<800?"leftCompact":"left",stateId:"docs-nav","menu-items":K},null,8,["variant"]),t("main",null,[t("div",Xt,[a(c,null,{default:g(({Component:h})=>[a(w(le),{variant:"title",tag:"h1",class:"page-title"},{default:g(()=>[o(ce(w(T).currentRoute.value.meta.title),1)]),_:1}),(m(),ae(de(h)))]),_:1})])])])],64)}}}),Jt=ye(Qt,[["__scopeId","data-v-199595af"]]),Zt=Object.assign({"../docs/(administration)/policies/configure-aliases/index.md":Ee,"../docs/(administration)/publish-resources/file-type-associations/index.md":Ve,"../docs/(administration)/publish-resources/index.md":et,"../docs/(administration)/publish-resources/resource-folder-permissions/index.md":ut,"../docs/(administration)/reverse-proxy/nginx/index.md":ft,"../docs/(administration)/security/error-5003/index.md":At,"../docs/(administration)/uninstall/index.md":_t,"../docs/(user-guide)/workspaces/index.md":Bt,"../docs/(welcome)/supported-environments/index.md":Yt,"../docs/index.md":zt}),eo=await Promise.all(Object.entries(Zt).map(async([s,{default:n,...l}])=>{let i=s.replace("../docs/","").replace("/index.md","/").toLowerCase();return i==="index.md"&&(i="index"),{path:"/docs/"+(i==="index"?"":i.replace("(user-guide)/","").replace("(administration)/","").replace("(welcome)/","")),name:i,meta:{...l},component:n||E}})),I=ve({history:Ae(),routes:[{path:"/:pathMatch(.*)*",component:E,props:{variant:"docs"}},{path:"/:pathMatch(.*[^/])",redirect:s=>`/${s.params.pathMatch}/`},...eo],strict:!0,scrollBehavior(s,n){const l=document.querySelector("#app main");if(!l)return;const i=M.get(s.fullPath);if(i)return l.scrollTo(i.left,i.top),!1;if(s.hash)return new Promise(e=>{requestAnimationFrame(()=>{const r=document.querySelector(s.hash);r&&r.scrollIntoView(),e(!1)})});l.scrollTo(0,0)}}),M=new Map;I.beforeEach((s,n,l)=>{const i=document.querySelector("#app main");i&&n.fullPath&&M.set(n.fullPath,{left:i.scrollLeft,top:i.scrollTop}),l()});I.afterEach(s=>{document.title=s.meta.title?`${s.meta.title} - RAWeb Wiki`:"RAWeb Wiki"});const B=Re();await Se(B).fetchData();const R=ke(_e(Jt));R.use(B);R.use(I);R.component("CodeBlock",(await We(async()=>{const{CodeBlock:s}=await import("./shared-C1qu_bLV.js").then(n=>n.ag);return{CodeBlock:s}},__vite__mapDeps([0,1]))).CodeBlock);R.directive("swap",(s,n)=>{s.parentNode&&(s.outerHTML=n.value)});await I.isReady();R.mount("#app");
